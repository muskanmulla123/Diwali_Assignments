{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\DiwaliAssignment\\\\Web Programming\\\\React\\\\todos-app\\\\src\\\\Todos.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Todos.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todos = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // fetch todo data on mount\n    fetch(\"https://jsonplaceholder.typicode.com/todos\").then(response => {\n      if (!response.ok) throw new Error(`HTTP ${response.status}`);\n      return response.json();\n    }).then(data => {\n      setTodos(data);\n      setLoading(false);\n    }).catch(err => {\n      setError(err.message || \"Unknown error\");\n      setLoading(false);\n    });\n  }, []); // empty dependency array -> run once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCCB To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"info\",\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: [\"Server Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: todos.slice(0, 20).map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `todo-item ${todo.completed ? \"completed\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"todo-id\",\n            children: [\"#\", todo.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"todo-status\",\n            children: todo.completed ? \"âœ… Done\" : \"ðŸ•“ Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-title\",\n          children: todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Todos, \"8cPL8yhAVVqFRj33HpgY53c1pGM=\");\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Todos","_s","todos","setTodos","loading","setLoading","error","setError","fetch","then","response","ok","Error","status","json","data","catch","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","todo","completed","id","title","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/DiwaliAssignment/Web Programming/React/todos-app/src/Todos.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Todos.css\";\r\n\r\nconst Todos = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // fetch todo data on mount\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos\")\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(`HTTP ${response.status}`);\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setTodos(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message || \"Unknown error\");\r\n        setLoading(false);\r\n      });\r\n  }, []); // empty dependency array -> run once on mount\r\n\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <h2>ðŸ“‹ To-Do List</h2>\r\n\r\n      {loading && <p className=\"info\">Loading data...</p>}\r\n\r\n      {error && <p className=\"error\">Server Error: {error}</p>}\r\n\r\n      {!loading && !error && (\r\n        <div className=\"todo-list\">\r\n          {todos.slice(0, 20).map((todo) => (\r\n            <div\r\n              key={todo.id}\r\n              className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}\r\n            >\r\n              <div className=\"todo-top\">\r\n                <span className=\"todo-id\">#{todo.id}</span>\r\n                <span className=\"todo-status\">\r\n                  {todo.completed ? \"âœ… Done\" : \"ðŸ•“ Pending\"}\r\n                </span>\r\n              </div>\r\n              <div className=\"todo-title\">{todo.title}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}